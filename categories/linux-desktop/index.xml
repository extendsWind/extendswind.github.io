<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux desktop on extendswind</title>
    <link>https://extendswind.top/categories/linux-desktop/</link>
    <description>Recent content in linux desktop on extendswind</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 04 Mar 2019 21:59:49 +0800</lastBuildDate>
    
	<atom:link href="https://extendswind.top/categories/linux-desktop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>anki的使用以及anki server的配置</title>
      <link>https://extendswind.top/posts/technical/anki_and_anki_server/</link>
      <pubDate>Mon, 04 Mar 2019 21:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/anki_and_anki_server/</guid>
      <description>首先吐槽，anki作为老牌软件，国内资料并不多。
虽然html的卡片显示和python的插件式开发上看比较适合程序员，但从各种配置上感觉程序员用户量并不大。
因此，想深度使用准备折腾。
简单使用  淘制作好的卡片，导入 卡片可以套模板更美观（添加时的Cards选项，支持html） 插件里的awesome TTS很多人推荐但速度略慢 添加单词可以用Word Query  官方文档https://apps.ankiweb.net/docs/manual.html 插件编写文档https://apps.ankiweb.net/docs/addons.html
一些坑 删除卡片不会删除对应的媒体文件，需要点击 check media 后手动删除。
anki server 的安装 官网的速度爆表，而且有数据安全问题，因此官网给出了自建anki server的解决方案。
百度上的大多使用 https://github.com/dsnopek/anki-sync-server，可以基于pip2和python2直接安装，个人在基于Arch的linux下感觉坑多，在linux上的anki 2.1.9连不上上面python2的服务器（bug解决一个又出一个），更建议使用基于python3的fork项目：https://github.com/tsudoko/anki-sync-server。
基于python3的仓库 github上的readme已经写得比较清楚，下面的搬运点大概。
 clone 仓库  git clone https://github.com/tsudoko/anki-sync-server.git
 安装anki或anki-bundled相关的库  直接使用包管理器安装 sudo pacman -S anki
如果包管理器里没有anki（如debian），也可以用pip安装anki-bundled相关的库
$ git submodule update --init # anki-bundled已经加入为submodule，可以先更新 $ cd anki-bundled $ pip install -r requirements.txt # 安装相关的库  安装webob  pip install webob
 修改 ankisyncd.</description>
    </item>
    
    <item>
      <title>linux 关闭主板上的蜂鸣器声音</title>
      <link>https://extendswind.top/posts/technical/mainboard_speaker_close/</link>
      <pubDate>Fri, 25 Jan 2019 10:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/mainboard_speaker_close/</guid>
      <description>在从deepin的kdd桌面换到xfce桌面后，命令行和界面操作上动不动会让主机响一声。
manjaro的xfce版也是如此，不知道是不是linux下xfce的通病。
主要是搜索的时候百度的结果很奇葩&amp;hellip;
用关键字 beep of xfce4 搜到了arch wiki下的内容，原来这玩意叫pc speaker，针对不同的情况有不同的解决方案。
最简单粗暴的方式 内核中加载了pcspkr模块导致的主板声音，rmmod移除此模块，然后/etc/modprobe.d文件夹下加入黑名单，使开机过程不加载。
 rmmod pcspkr echo &amp;ldquo;blacklist pcspkr&amp;rdquo; &amp;gt; /etc/modprobe.d/nobeep.conf  具体参考 https://wiki.archlinux.org/index.php/PC_speaker</description>
    </item>
    
    <item>
      <title>manjaro AwesomeWM 上使用双显示器</title>
      <link>https://extendswind.top/posts/technical/dual_monitor_manjaro_awesome/</link>
      <pubDate>Thu, 24 Jan 2019 21:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/dual_monitor_manjaro_awesome/</guid>
      <description>安装manjaro时使用独显的单显示器，在主板上接第二个显示器一直没反应。
几个问题和解决 BIOS里检查是否关闭了集显开关 大多数显卡的默认设置都会在识别独显后关闭集显，要使用集显上的接口需要单独设置。
如果接口允许，最好将两个显示器都接在独显上。
基于KDE等桌面 如果主板和显卡驱动正常，一般各大桌面环境都支持GUI配置，可以在显示设置里直接修改。
使用 xrandr 识别和控制显示器 xrandr 直接执行会得到显示器的连接状态，获取显示器的名称后可以用下面的命令显示。
（其中DVI-I-1-1与VGA1为两个显示器的名称）
xrandr --output DVI-I-1-1 --mode 1440x900 --primary --output VGA1 --mode 1366x768 --pos 1440x132 设置输出的显示器以及显示参数，每个--output后接显示器名以及参数，--mode指定分辨率，--primary指定主显示器，--pos指定位置，或者用--right-of指定相对位置。
更进一步的设置可以在arch wiki
xrandr 找不到显示器 xrandr &amp;ndash;listproviders 得到当前的显示器输入设备（一般name为Intel的是集显，name为nouveau的是开源独显驱动，Nvidia为闭源显卡驱动）
xrandr &amp;ndash;setprovideroutputsource 0 1 将上面的设备设置为输入源
如果xrandr &amp;ndash;listproviders 没有得到所有的输入源，则需要折腾驱动。
驱动问题 一般建议将两个显示器都接在独显上，出问题的概率更低（独显一般口不够或者需要转换略尴尬）。
我将显示器分别接在独显和主板接口上，在manjaro和deepin两个系统下都发现NVIDIA驱动有问题，primary显示器会显示两个显示器的内容。而将显卡驱动切换到开源驱动（nouveau）时正常(据说开源驱动性能略低）。
mhwd -li --pci 查看已经安装的驱动 mhwd -l --pci 查看能用的驱动 sudo mhwd -r pci video-nvidia 移除驱动video-nvidia sudo mhwd -a pci videa-linux 安装开源显卡驱动（nouveau）  manjaro上通过mhwd简化了各种配置，详见：
https://wiki.manjaro.org/index.php/Configure_Graphics_Cards
AwesomeWM 默认快捷键：</description>
    </item>
    
    <item>
      <title>manjaro (arch) 安装搜狗输入法</title>
      <link>https://extendswind.top/posts/technical/sogou_input_install_in_arch_manjaro/</link>
      <pubDate>Mon, 21 Jan 2019 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/sogou_input_install_in_arch_manjaro/</guid>
      <description>本来还很简单的事，被默认的选项弄出一堆坑
步骤 先安装fcitx用来管理输入法，然后安装搜狗输入法并配置，然后添加环境变量使相关的应用默认加载fcitx。
1. 安装fcitx以及配置 sudo pacman -S fcitx fcitx-im fcitx-configtool
fcitx 为基础安装包，fcitx-im用于GTK/QT等界面上使用的包，fcitx-configtool为配置界面（kde下还能安装一个kde版的configtool）。
2. 安装搜狗输入法 yaourt fcitx-sogoupinyin
此处有坑，默认的安装方式会编译安装qtwebkit，速度非常的慢（一个小时午觉后还没好&amp;hellip;)
在库的官方说明中（来自 https://aur.archlinux.org/packages/fcitx-sogoupinyin/ ）依赖项为qtwebkit (qtwebkit-bin)
其实只依赖qtwebkit-bin，因此先安装qtwebkit-bin可以解决依赖问题（不到一分钟&amp;hellip;)
yaourt -S qtwebkit-bin
3. fcitx 设置中添加搜狗拼音 fcitx configuration中点加号添加sogou pinyin（默认语言为英语时需要勾选一个选项）
4. fcitx环境变量的添加 gui应用的环境变量一般不通过profile和bashrc。
arch wiki下的内容：
 KDM, GDM, LightDM 等显示管理器，请使用 ~/.xprofile arch wiki 警告: 上述用户不要在~/.xinitrc中加入下述脚本，否则会造成无法登陆。(但在里头加了也没挂) 如果您用 startx 或者 Slim 启动，请使用~/.xinitrc 中加入
export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx
如果你使用的是较新版本的GNOME，使用 Wayland 显示管理器，则请在/etc/environment中加入
GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx
 参考链接中有更详细的说明，我用的manjaro+xfce4以及后面改装的cinnamon和awesome都是在lightDM下该的.xinitrc，没有.xprofile文件，也能正常用。 （注意添加在最后exec $(&amp;hellip;)的前面）</description>
    </item>
    
    <item>
      <title>arch linux (manjaro) 下运行tim和qq</title>
      <link>https://extendswind.top/posts/technical/tim_install_wine/</link>
      <pubDate>Sun, 20 Jan 2019 21:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/tim_install_wine/</guid>
      <description>基于AUR的安装是没什么难度了，主要安装后会出各种问题，还有选不同的包的影响。
官方的wiki上推荐安装deepin-wine-tim，基于wine和最新版的tim。安装后存在qq密码每次都要输入的问题（201804测试没有此问题，但还是不太稳定，2018年因为wine的更新导致挂了两次只能回退）。
更推荐使用的deepin.com.qq.office，基于deepin-wine，配置好了比较稳定。
安装步骤 安装 yaourt -S deepin.com.qq.office
ps：吐槽，安装deepin-wine的各个确认略多。 d
qq提取消息、截图等快捷键设置 在/opt/deepinwine/tools/sendkeys.sh脚本能够传递快捷键，如直接运行./sendkeys.sh a 则会向qq或tim进程发送 ctrl+alt+a。
不同桌面环境添加快捷键的方法差不多，主要步骤：
 setting -&amp;gt; keyboard -&amp;gt; shortcut 添加快捷键，选择上面的脚本，在脚本后面加上a 指定运行脚本的快捷键  此时按快捷键后相当于qq中按 ctrl+alt+a (截图)
同理可以设置qq其它快捷键
一般问题 大多出现在基于wine的tim上，基于deepin的tim问题很少。
deepin-wine在非gnome系的桌面上的运行问题 3wm, kde, awesome等桌面管理器或桌面环境里运行基于deepin-wine的qq和tim时，会出现下面的错误
 X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)
 由于deepin-wine依赖了gnome系（mate,cinnamon,gnome）的setting-daemon，需要安装后运行（一般加入开机启动）
sudo pacman -S cinnamon-settings-daemon /usr/lib/cinnamon-settings-daemon/csd-xsettings 无法输入中文 如果其它地方可以使用输入法，一般为环境变量的问题，fcitx没有配置好。
粗暴解决方式: 下面的文件夹中加入环境变量
/opt/deepinwine/apps/Deepin-TIM/run.sh
 export XMODIFIERS=&amp;ldquo;@im=fcitx&amp;rdquo; export GTK_IM_MODULE=&amp;ldquo;fcitx&amp;rdquo; export QT_IM_MODULE=&amp;ldquo;fcitx&amp;rdquo;</description>
    </item>
    
    <item>
      <title>在非gnome系桌面环境下运行deepin-wine tim的错误解决</title>
      <link>https://extendswind.top/posts/technical/deepin_wine_run_in_not_gnome_desktop_environment/</link>
      <pubDate>Sun, 20 Jan 2019 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/deepin_wine_run_in_not_gnome_desktop_environment/</guid>
      <description>i3wm, kde, awesome等桌面管理器或桌面环境里运行基于deepin-wine的qq和tim时，会出现下面的错误
 X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)
 在gnome、mate、cinnamon三个桌面上运行较好，xfce4上运行有少许焦点上的bug，其它桌面环境和管理器下直接出上面的错误。
最近终于在aur上看到是因为deepin-wine依赖了gnome-setttings-daemon。（xsettings的一个后台进程，cinnamon和mate的xsettings进程也能用）
解决方案 貌似是因为对gnome-setttings-daemon的依赖。
arch系：
sudo pacman -S gnome-settings-daemon /usr/lib/gsd-setttings 运行tim和qq即可
ubuntu 下的包和运行的程序名略不一样，参考：
https://github.com/wszqkzqk/deepin-wine-ubuntu/issues/12#issuecomment-443656358
注意 在使用xsettings之后，主题等需要与对应的xsettings设置相对应。如使用gnome-settings-daemon时，需要在gnome的设置里更改主题。使用lxappearance修改主题只会更改~/.gtkrc-2.0等文件，不会生效。
附：使用cinnamon的xsettings的设置 主题的问题略坑，懒得去试gnome上的主题设置需要哪些包，安装整个gnome的包需要800多M，直接安装了cinnamon的基础包（90M左右）。
cinnamon的xsettings默认也没用那个不太能忍的主题。
sudo pacman -S cinnamon # awesome的autorun里加入下面程序使开机运行 /usr/lib/cinnamon-settings-daemon/csd-xsettings 在系统设置里可以下载和更改主题
小坑 tim和qq都会在点击好友图像时卡死，原因是因为pulseaudio进程，kill掉就行，会影响声音的调整。（千里之外的两个程序不知道为什么会卡一起）
最后 又从mate+awesomewm回到纯awesomewm，但运行了一个xsetting进程也不知道和直接mate+awesome比能节约多少内存。</description>
    </item>
    
    <item>
      <title>arch linux下网易云音乐运行没反应，只能使用root用户运行</title>
      <link>https://extendswind.top/posts/technical/netease_music_can_not_open/</link>
      <pubDate>Tue, 20 Nov 2018 19:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/netease_music_can_not_open/</guid>
      <description>最近打开网易云音乐没有反应，只在htop命令下能看到运行的进程（manjaro+mate+awesome）。
命令行sudo可以正常运行
无用尝试  安装官网给的最新1.1.3的deepin与ubuntu16两个版本 网上提到的&amp;ndash;no-sandbox参数运行 kill已经运行的netease-cloud-music相关进程  解决方案 回退到更早的1.0.0版，估计新版没有在各个linux系统下测试。
http://s1.music.126.net/download/pc/netease-cloud-music_1.0.0-2_amd64_ubuntu16.04.deb
debian系就直接dpkg -i吧
arch系通过AUR安装稍麻烦:
 卸载原版本 yaourt -S netease-cloud-music 按y Edit PKGBUILD 将1.1.3的安装包地址替换为1.1.0的安装包地址，并且将对应hash值改为skip，具体如下  改之前：
source=( &amp;quot;http://packages.deepin.com/deepin/pool/main/n/netease-cloud-music/netease-cloud-music_${pkgver}-${_pkgrel}_amd64.deb&amp;quot; &amp;quot;http://music.163.com/html/web2/service.html&amp;quot; ) md5sums=(&#39;53c47c1bf6797b2a0e455bc59833ab2d&#39; &#39;SKIP&#39;)  改之后
source=( &amp;quot;http://s1.music.126.net/download/pc/netease-cloud-music_1.0.0-2_amd64_ubuntu16.04.deb&amp;quot; &amp;quot;http://music.163.com/html/web2/service.html&amp;quot; ) md5sums=(&#39;SKIP&#39; &#39;SKIP&#39;)  然后正常安装即可</description>
    </item>
    
    <item>
      <title>使用AwesomeWM作为Mate(Gnome相同) Desktop的窗口管理器</title>
      <link>https://extendswind.top/posts/technical/using_awesomewm_as_wm_of_mate_desktop/</link>
      <pubDate>Sat, 20 Oct 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/using_awesomewm_as_wm_of_mate_desktop/</guid>
      <description> 20190118更新:
最近发现有在非gnome系的DE下运行deepin-wine的解决方案，没必要专门跑一个mate。
安装gnome-setttings-daemon，然后运行/usr/lib/gsd-xsettings。（不同系统会不一样）
具体记录在另一篇博客
AwesomeWM这种平铺的窗口管理器用得很爽，只是基于wine的qq最近又莫名其妙抽风，感觉还是切到deepin-wine上比较靠谱。而deepin-wine在awesome下运行qq会报错X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)，而在Gnome系下运行正常。看到Gnome和Mate能够运行awesomewm，就折腾了一下试试。
Awesome只是Gnome等桌面管理器的组件之一，gnome系的Mate可以修改默认的窗口管理器。
具体折腾  安装AwesomeWM、Mate桌面环境与dconf-editor（arch下使用pacman -S）。
 进入Mate桌面环境后，修改org.mate.session.required-components windowmanager的值为&amp;rsquo;awesome&amp;rsquo;，如果不需要桌面上的图标，可以将org.mate.session.required-components的值只留下windowmanager。
 上面的设置无法通过命令行打开awesome，需要添加awesome的图标。在/usr/share/applications目录下新建awesome.desktop，内容如下（网上直接粘的，估计有些可以不要，懒得试了）：
  [Desktop Entry] Type=Application Name=awesome Exec=awesome NoDisplay=true # name of loadable control center module X-MATE-WMSettingsModule=awesome # name we put on the WM spec check window X-MATE-WMName=awesome # back compat only X-MateWMSettingsLibrary=awesome X-MATE-Bugzilla-Bugzilla=MATE X-MATE-Bugzilla-Product=awesome X-MATE-Bugzilla-Component=general X-MATE-Autostart-Phase=WindowManager X-MATE-Provides=windowmanager X-MATE-Autostart-Notify=true  </description>
    </item>
    
    <item>
      <title>使用u盘安装linux(manjaro)时Grub报错</title>
      <link>https://extendswind.top/posts/technical/manjaro_install_problem_grub/</link>
      <pubDate>Tue, 17 Jul 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/manjaro_install_problem_grub/</guid>
      <description>错误  error: invalid arch-independent ELF magic. Entering rescue mode&amp;hellip; grub rescue&amp;gt;
 使用Rufu ISO模式烧录的U盘，lagency 模式能够启动，但点安装后出上面错误；UEFI模式直接出上面错误。
解决方案 不多说，百度背锅，google答案的前几个就是正解。
U盘烧录问题，使用rufu烧录U盘时，最好使用DD模式而非ISO模式。（去年安装manjaro-xfce4时用ISO模式没出过）
https://forum.manjaro.org/t/grub-error-computer-with-no-os-installed-invalid-arch-independent-elf-magic/21805
解决方案：使用Rufu烧录U盘，点开始后会有选择DD模式或者ISO模式，此时选DD模式，然后UEFI启动即可。
论坛上还推荐使用etcher</description>
    </item>
    
    <item>
      <title>开启不折腾模式</title>
      <link>https://extendswind.top/posts/technical/from_geeker_to_no_self_inflicted/</link>
      <pubDate>Tue, 17 Jul 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/from_geeker_to_no_self_inflicted/</guid>
      <description>用了很长一段时间的linux，和很多人对linux相比windows的优点评价相同，linux是非常自由的操作系统。从内核到桌面环境到各个应用都可以自行定制，能够完全按照自己的喜好修改，实在没有的功能甚至能够自己造轮子。
也因此对于我这样的强迫症患者，在各个组件上都想追求一个最舒适的解决方案。这样一个系统确实用得舒服，但也总有用得不舒服的地方需要持续改善，不断调整各个组件以及造一些脚本级的轮子。
最近连续几周效率严重偏低，也突然发现自己在这些看似意义不大的地方耗费的时间太多。一个emacs各种折腾最后只是写写简单的c++、Python和org；awesomeWM嵌入Mate其实相比传统的多workspace方式也没特别大的区别；软件尽可能找到开源替代与商业版本隔离。
或许太多时候以geek自居追求某种“无强迫”环境，而忘记要事优先。
提醒一下自己刚开始读研的目标，在一堆感兴趣的hello world基础之上有所深入。
感兴趣的技术太多，总要有所舍弃。
linux是用来折腾的，更是用来解决问题的。</description>
    </item>
    
    <item>
      <title>linux桌面发行版简介</title>
      <link>https://extendswind.top/posts/technical/linux_desktop_distribution/</link>
      <pubDate>Fri, 29 Jun 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/linux_desktop_distribution/</guid>
      <description>linux系统 桌面操作系统：windows，MacOS和各linux发行版。
2017年数据，windows份额超过90%，MacOS约6%，Linux份额最高的记录在2016年7月创下，是2.33%。
貌似用linux和MacOS的大多是程序员了。MacOS和linux系统正常使用（看书、上网、看电影等）已经比较成熟，没有太大的体验差异。
linux系统的主要缺点：
 某些常用软件在linux上没有或运行有问题（qq、迅雷、office等，只有deepin通过虚拟windows系统解决得稍好） 完美折腾需要掌握大量相关知识，不折腾难以体现其优点 某些设置复杂（较好的发行版已有极大的改善，某些操作需要使用命令）  linux作为桌面系统主要优点（作为服务器系统广泛使用不谈）：
 软件管理容易 可定制性超强 免费（看版权意识）  对于开发人员，大部分的软件一键安装还解决依赖问题，想要的操作大部分可以通过修改配置和安装软件实现。在运行某些开发软件会明显感觉更快，绝大部分配置通过文本文件容易修改。
linux发行版 一般的linux发行版包括：Linux内核，一些GNU程序库和工具，命令行shell，图形界面的X Window系统和相应的桌面环境，以及一系列其他的软件包（浏览器、阅读器、文本编辑器等）。由各种组织和个人维护。
主要用过的几个桌面发行版：  也许桌面用户最多的Ubuntu 不折腾的Arch系Manjaro （当前主力） 和Manjaro在distrowatch上争第一的Ubuntu进化版Mint 号称最美linux的Elementary 超稳定适合服务器的版本Centos （只在服务器上用） 最强国产化linux的Deepin和一般国产化的优麒麟  下面叙述中不包含在内的主要道听途说
主流的发行版 debian系：Debian -&amp;gt; Ubuntu -&amp;gt; Mint | Elementary | Deepin | 优麒麟 fedora : Fedora -&amp;gt; RHEL -&amp;gt; Centos | Oracle linux SUSE : SUSE -&amp;gt; SLES -&amp;gt; openSUSE (没有用过，大多对其评价较为中立，暂不讨论) arch : Arch -&amp;gt; Manjaro gantoo
其中箭头后的系统基于前面的系统发展，但并不影响前面系统的优势。如Ubuntu基于Debian系统成为较好的桌面系统，但Debian由于其轻量级和可定制仍有广泛使用。</description>
    </item>
    
  </channel>
</rss>